{"is_source_file": true, "format": "Python", "description": "This file defines the main API entry point for a notes management backend, built with FastAPI. It includes setup of middleware, database initialization, and endpoints for CRUD operations on notes, along with a health check.", "external_files": ["src/db/database.py", "src/db/models.py", "src/db/schemas.py"], "external_methods": ["src/db.database.Base.metadata.create_all", "src/db.database.get_db", "src/db.models.Note"], "published": ["app", "health_check", "list_notes", "create_note", "get_note", "update_note", "delete_note"], "classes": [{"name": "FastAPI", "description": "FastAPI application instance configured with API title, description, version, and tags."}], "methods": [{"name": "None on_startup()", "description": "Creates database tables on application startup.", "scope": "", "scopeKind": ""}, {"name": "health_check()", "description": "Health check endpoint returning a simple status message.", "scope": "", "scopeKind": ""}, {"name": "list_notes( q: Optional[str] = Query(default=None, description=\"Search query for title/content\"), db: Session = Depends(get_db), )", "description": "Retrieves all notes, with optional filtering via search query, ordered by updated date descending.", "scope": "", "scopeKind": ""}, {"name": "create_note(payload: NoteCreate, db: Session = Depends(get_db))", "description": "Creates a new note with provided title and optional content.", "scope": "", "scopeKind": ""}, {"name": "get_note(note_id: int, db: Session = Depends(get_db))", "description": "Retrieves a specific note by its ID.", "scope": "", "scopeKind": ""}, {"name": "update_note(note_id: int, payload: NoteUpdate, db: Session = Depends(get_db))", "description": "Updates an existing note identified by ID with new title and/or content.", "scope": "", "scopeKind": ""}, {"name": "delete_note(note_id: int, db: Session = Depends(get_db))", "description": "Deletes a note by ID.", "scope": "", "scopeKind": ""}], "calls": ["Base.metadata.create_all", "get_db", "models.Note", "db.query", "db.get", "db.add", "db.commit", "db.refresh", "db.delete"], "search-terms": ["FastAPI main application", "notes CRUD endpoints", "health endpoint", "Database initialization", "Dependency injection", "SQLAlchemy models", "CORS middleware"], "state": 2, "file_id": 4, "knowledge_revision": 21, "git_revision": "d992109704e75e232f830161d03b323783189f7e", "revision_history": [{"9": "48f859b504142bc969a37262ac26dd04cb0809f6"}, {"16": "882201471ef1ace4223641f768d09e7b31be071f"}, {"20": "d992109704e75e232f830161d03b323783189f7e"}, {"21": "d992109704e75e232f830161d03b323783189f7e"}], "ctags": [{"_type": "tag", "name": "allow_origins", "path": "/home/kavia/workspace/code-generation/note-management-system-180683-180693/notes_backend/src/api/main.py", "pattern": "/^    allow_origins = [\"*\"]$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "app", "path": "/home/kavia/workspace/code-generation/note-management-system-180683-180693/notes_backend/src/api/main.py", "pattern": "/^app = FastAPI($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "create_note", "path": "/home/kavia/workspace/code-generation/note-management-system-180683-180693/notes_backend/src/api/main.py", "pattern": "/^def create_note(payload: NoteCreate, db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(payload: NoteCreate, db: Session = Depends(get_db))"}, {"_type": "tag", "name": "delete_note", "path": "/home/kavia/workspace/code-generation/note-management-system-180683-180693/notes_backend/src/api/main.py", "pattern": "/^def delete_note(note_id: int, db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(note_id: int, db: Session = Depends(get_db))"}, {"_type": "tag", "name": "frontend_origin_env", "path": "/home/kavia/workspace/code-generation/note-management-system-180683-180693/notes_backend/src/api/main.py", "pattern": "/^frontend_origin_env = os.getenv(\"FRONTEND_ORIGIN\", \"*\").strip()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "get_note", "path": "/home/kavia/workspace/code-generation/note-management-system-180683-180693/notes_backend/src/api/main.py", "pattern": "/^def get_note(note_id: int, db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(note_id: int, db: Session = Depends(get_db))"}, {"_type": "tag", "name": "health_check", "path": "/home/kavia/workspace/code-generation/note-management-system-180683-180693/notes_backend/src/api/main.py", "pattern": "/^def health_check():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "list_notes", "path": "/home/kavia/workspace/code-generation/note-management-system-180683-180693/notes_backend/src/api/main.py", "pattern": "/^def list_notes($/", "language": "Python", "kind": "function", "signature": "( q: Optional[str] = Query(default=None, description=\"Search query for title/content\"), db: Session = Depends(get_db), )"}, {"_type": "tag", "name": "on_startup", "path": "/home/kavia/workspace/code-generation/note-management-system-180683-180693/notes_backend/src/api/main.py", "pattern": "/^def on_startup() -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "update_note", "path": "/home/kavia/workspace/code-generation/note-management-system-180683-180693/notes_backend/src/api/main.py", "pattern": "/^def update_note(note_id: int, payload: NoteUpdate, db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(note_id: int, payload: NoteUpdate, db: Session = Depends(get_db))"}], "hash": "2b32e74625ea06c3a532f9c6acb019e7", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/src/api/main.py", "fields": [{"name": "allow_origins = [\"*\"]", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "app = FastAPI(", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "frontend_origin_env = os.getenv(\"FRONTEND_ORIGIN\", \"*\").strip()", "scope": "", "scopeKind": "", "description": "unavailable"}]}